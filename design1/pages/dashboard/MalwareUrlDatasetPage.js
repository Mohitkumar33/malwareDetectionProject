// pages/dashboard/MalwareUrlDatasetPage.js
import React, { useEffect, useState } from "react";
import Sidebar from "@/components/aside/Sidebar";
import {
  Box,
  Table,
  Thead,
  Tbody,
  Tr,
  Th,
  Td,
  TableCaption,
  Text,
  VStack,
  Center,
} from "@chakra-ui/react";

const MalwareUrlDatasetPage = () => {
  const [malwareUrls, setMalwareUrls] = useState([]); // State to store malware URLs

  useEffect(() => {
    // Fetch malware URLs from the API on component mount
    const fetchMalwareUrls = async () => {
      try {
        const response = await fetch("http://localhost:3003/api/predictions"); // Replace with your actual API endpoint
        if (!response.ok) {
          throw new Error("Failed to fetch malware URLs");
        }
        const data = await response.json();

        // Filter out benign URLs
        const filteredUrls = data.filter(
          (urlEntry) => urlEntry.typeOfMalware !== "benign"
        );

        setMalwareUrls(filteredUrls); // Set the malware URLs in state
      } catch (error) {
        console.error("Error fetching malware URLs:", error);
      }
    };

    fetchMalwareUrls(); // Call the fetch function
  }, []);

  return (
    <Box>
      {/* Include Sidebar */}
      <Sidebar />

      {/* Main Content Area */}
      <Box ml="250px" p={4}>
        <VStack spacing={4} align="center">
          <Text fontSize="2xl" mb={4}>
            Malware URL Dataset
          </Text>

          {/* Description Text */}
          <Text textAlign="center" fontSize="lg" maxWidth="600px">
            This page displays a list of known malicious URLs detected through
            our prediction system. The URLs are filtered to show only those that
            are classified as malware, helping us maintain a secure environment.
          </Text>

          {/* Centering the Table */}
          <Center width="full">
            <Table variant="striped" colorScheme="teal" width="90%">
              <TableCaption>List of Malicious URLs</TableCaption>
              <Thead>
                <Tr>
                  <Th>URL</Th>
                  <Th>Type of Malware</Th>
                </Tr>
              </Thead>
              <Tbody>
                {malwareUrls.map((entry, index) => (
                  <Tr key={index}>
                    <Td>{entry.url}</Td>
                    <Td>{entry.typeOfMalware}</Td>
                  </Tr>
                ))}
              </Tbody>
            </Table>
          </Center>
        </VStack>
      </Box>
    </Box>
  );
};

export default MalwareUrlDatasetPage;
