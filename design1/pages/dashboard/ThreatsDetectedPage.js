import React, { useEffect, useState } from "react";
import Sidebar from "@/components/aside/Sidebar";
import {
  Box,
  Text,
  VStack,
  Heading,
  Center,
  SimpleGrid,
  Stat,
  StatLabel,
  StatNumber,
} from "@chakra-ui/react";

const ThreatsDetectedPage = () => {
  const [data, setData] = useState({
    totalThreats: 0,
    threatsByUserType: {
      admin: 0,
      student: 0,
    },
    mostCommonMalware: "",
  });

  // Fetch threats data from the API
  const fetchThreatsData = async () => {
    try {
      const response = await fetch("http://localhost:3003/api/predictions"); // Replace with your actual API endpoint for predictions
      if (!response.ok) {
        throw new Error("Failed to fetch threats data");
      }
      const threatsData = await response.json();

      // Process the fetched data
      let totalThreats = 0;
      const threatsCountByUserType = {
        admin: 0,
        student: 0,
      };
      const malwareCount = {};

      threatsData.forEach((prediction) => {
        // Count total threats
        if (prediction.result === "Yes") {
          totalThreats++;
        }

        // Count threats by user type
        if (prediction.userType === "Admin") {
          threatsCountByUserType.admin++;
        } else if (prediction.userType === "Student") {
          threatsCountByUserType.student++;
        }

        // Count malware types
        const malwareType = prediction.typeOfMalware || "Unknown";
        malwareCount[malwareType] = (malwareCount[malwareType] || 0) + 1;
      });

      // Determine the most common malware type
      const mostCommonMalware = Object.entries(malwareCount).reduce((a, b) =>
        b[1] > a[1] ? b : a
      )[0];

      // Update state with calculated data
      setData({
        totalThreats,
        threatsByUserType: threatsCountByUserType,
        mostCommonMalware: mostCommonMalware || "None",
      });
    } catch (error) {
      console.error("Error fetching threats data:", error);
    }
  };

  useEffect(() => {
    fetchThreatsData(); // Fetch data on component mount
  }, []);

  return (
    <Box>
      {/* Include Sidebar */}
      <Sidebar />

      {/* Main Content Area */}
      <Box ml="250px" p={4}>
        <VStack spacing={4} align="center">
          <Heading as="h2" size="xl">
            Threats Detected Overview
          </Heading>

          {/* Suggestions or Instructions Text */}
          <Text textAlign="center" fontSize="lg" maxWidth="600px">
            This page provides a comprehensive overview of the threats detected
            within our system. Understanding the scale and type of threats is
            crucial for improving security measures and protecting our users.
            Below are the key metrics you need to be aware of.
          </Text>

          {/* SimpleGrid for organized layout */}
          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10} width="full">
            {/* Total Threats Box */}
            <Stat
              textAlign="center"
              p={4}
              borderWidth={1}
              borderRadius="md"
              boxShadow="lg"
              backgroundColor="teal.50"
            >
              <StatLabel fontSize="lg" fontWeight="bold">
                Total Threats Detected
              </StatLabel>
              <StatNumber fontSize="2xl" fontWeight="bold">
                {data.totalThreats}
              </StatNumber>
            </Stat>

            {/* Admin Threats Box */}
            <Stat
              textAlign="center"
              p={4}
              borderWidth={1}
              borderRadius="md"
              boxShadow="lg"
              backgroundColor="orange.50"
            >
              <StatLabel fontSize="lg" fontWeight="bold">
                Threats Detected by Admin
              </StatLabel>
              <StatNumber fontSize="2xl" fontWeight="bold">
                {data.threatsByUserType.admin}
              </StatNumber>
            </Stat>

            {/* Student Threats Box */}
            <Stat
              textAlign="center"
              p={4}
              borderWidth={1}
              borderRadius="md"
              boxShadow="lg"
              backgroundColor="blue.50"
            >
              <StatLabel fontSize="lg" fontWeight="bold">
                Threats Detected by Student
              </StatLabel>
              <StatNumber fontSize="2xl" fontWeight="bold">
                {data.threatsByUserType.student}
              </StatNumber>
            </Stat>

            {/* Most Common Malware Box */}
            <Stat
              textAlign="center"
              p={4}
              borderWidth={1}
              borderRadius="md"
              boxShadow="lg"
              backgroundColor="purple.50"
            >
              <StatLabel fontSize="lg" fontWeight="bold">
                Most Common Malware
              </StatLabel>
              <StatNumber fontSize="2xl" fontWeight="bold">
                {data.mostCommonMalware}
              </StatNumber>
            </Stat>
          </SimpleGrid>
        </VStack>
      </Box>
    </Box>
  );
};

export default ThreatsDetectedPage;
