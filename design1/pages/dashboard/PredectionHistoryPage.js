import React, { useEffect, useState } from "react";
import Sidebar from "@/components/aside/Sidebar";
import {
  Box,
  Table,
  Thead,
  Tbody,
  Tr,
  Th,
  Td,
  TableCaption,
  Text,
  VStack,
  Center,
} from "@chakra-ui/react";

const PredictionHistoryPage = () => {
  const [predictions, setPredictions] = useState([]); // State to store prediction history

  useEffect(() => {
    // Fetch prediction history from the API on component mount
    const fetchPredictionHistory = async () => {
      try {
        const response = await fetch("http://localhost:3003/api/predictions"); // Replace with your actual API endpoint
        if (!response.ok) {
          throw new Error("Failed to fetch data");
        }
        const data = await response.json();

        // Manipulate the data as needed
        const manipulatedData = data.map((prediction) => ({
          date: new Date(prediction.date).toLocaleString(), // Format date
          result:
            prediction.result === "Yes" ? "Malware Detected" : "No Malware", // Readable result
          typeOfMalware: prediction.typeOfMalware || "N/A", // Default to "N/A" if undefined
          detectedBy: prediction.detectedBy,
          userType: prediction.userType,
        }));

        setPredictions(manipulatedData); // Set the manipulated prediction data in state
      } catch (error) {
        console.error("Error fetching prediction history:", error);
      }
    };

    fetchPredictionHistory();
  }, []);

  return (
    <Box>
      {/* Include Sidebar */}
      <Sidebar />

      {/* Main Content Area */}
      <Box ml="250px" p={4}>
        <VStack spacing={4} align="center">
          <Text fontSize="2xl" mb={4}>
            Prediction History
          </Text>

          {/* Suggestions or Instructions Text */}
          <Text textAlign="center" fontSize="lg" maxWidth="600px">
            Below is the history of all predictions made by users. This table
            includes details such as the date of prediction, the result of the
            prediction, the type of malware detected, who made the prediction,
            and the type of user. Review the information to understand the
            patterns and take necessary actions.
          </Text>

          {/* Centering the Table */}
          <Center width="full">
            <Table variant="striped" colorScheme="teal" width="90%">
              <TableCaption>List of past predictions</TableCaption>
              <Thead>
                <Tr>
                  <Th>Date of Prediction</Th>
                  <Th>Result (Malware)</Th>
                  <Th>Type of Malware</Th>
                  <Th>Detected By</Th>
                  <Th>User Type</Th>
                </Tr>
              </Thead>
              <Tbody>
                {predictions.map((prediction, index) => (
                  <Tr key={index}>
                    <Td>{prediction.date}</Td>
                    <Td>{prediction.result}</Td>
                    <Td>{prediction.typeOfMalware}</Td>
                    <Td>{prediction.detectedBy}</Td>
                    <Td>{prediction.userType}</Td>
                  </Tr>
                ))}
              </Tbody>
            </Table>
          </Center>
        </VStack>
      </Box>
    </Box>
  );
};

export default PredictionHistoryPage;
