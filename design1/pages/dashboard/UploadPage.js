// pages/UploadPage.js
import React, { useState } from 'react';
import Sidebar from "@/components/aside/Sidebar";
import { Box, Button, Text, VStack, Input, Center } from "@chakra-ui/react";

const UploadPage = () => {
  const [fileContent, setFileContent] = useState(""); // State to store uploaded file content

  // Handle file upload
  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        setFileContent(e.target.result); // Store file content in state
      };
      reader.readAsText(file); // Read file as text
    }
  };

  // Function to handle prediction
  const handlePredict = async () => {
    try {
      // Call your API here
      const response = await fetch('/api/predict', { // Replace with your actual API endpoint
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ content: fileContent }), // Send file content to the API
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      console.log(data); // Handle the prediction response (display, store, etc.)
    } catch (error) {
      console.error('Error during prediction:', error);
    }
  };

  return (
    <Box>
      {/* Include Sidebar */}
      <Sidebar />

      {/* Main Content Area */}
      <Box ml="250px" p={4}>
        <VStack spacing={4} align="center">
          <Text fontSize="2xl" mb={4}>Upload Text File</Text>

          {/* Suggestions or Instructions Text */}
          <Text textAlign="center" fontSize="lg" maxWidth="600px">
            To make predictions based on your data, please upload a text file containing the relevant information. 
            Ensure the file is formatted correctly for optimal results. After uploading, you can click the 
            "Predict" button to initiate the analysis.
          </Text>

          {/* File Upload Input */}
          <Input type="file" accept=".txt" onChange={handleFileChange} />

          {/* Display File Content (optional) */}
          <Text whiteSpace="pre-wrap" borderWidth={1} borderRadius="md" p={2} bg="gray.100" width="full">
            {fileContent}
          </Text>

          {/* Upload Button */}
          <Center width="full">
            <Button colorScheme="teal" onClick={handlePredict} isDisabled={!fileContent}>
              Predict
            </Button>
          </Center>
        </VStack>
      </Box>
    </Box>
  );
};

export default UploadPage;
