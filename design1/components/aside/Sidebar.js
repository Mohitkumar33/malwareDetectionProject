// components/aside/Sidebar.js
import React, { useEffect, useState } from "react";
import { Box, Flex, VStack, Text, Link, Spacer } from "@chakra-ui/react";
import {
  FiHome,
  FiUpload,
  FiUsers,
  FiBookOpen,
  FiShield,
  FiActivity,
  FiPlayCircle,
  FiLogOut,
} from "react-icons/fi";
import { useRouter } from "next/router"; // Import useRouter from Next.js
import { useAuth } from "../context/auth-context";

const Sidebar = () => {
  const router = useRouter(); // Initialize the router hook
  const currentPath = router.pathname; // Get the current path
  const { authState, setAuthState } = useAuth();
  const [userType, setUserType] = useState("");

  // Get userType from localStorage on component mount
  useEffect(() => {
    const storedUserType = localStorage.getItem("type");
    setUserType(storedUserType);
  }, []);
  // Handle navigation and update the active state
  const handleTabClick = (href) => {
    router.push(href); // Navigate to the clicked tab
  };

  return (
    <Box
      as="aside"
      position="fixed"
      left={0}
      top={0}
      height="100vh"
      width="250px"
      bg="teal.500"
      color="white"
      padding={4}
      display="flex"
      flexDirection="column"
      alignItems="center"
    >
      {/* Logo Section */}
      <Flex alignItems="center" mb={8}>
        <Text fontSize="2xl" fontWeight="bold">
          ZeroThreat
        </Text>
      </Flex>

      {/* Navigation Links */}
      <VStack spacing={4} align="center" w="full">
        <SidebarLink
          href="/dashboard/HomePage"
          icon={FiHome}
          label="Dashboard"
          active={currentPath === "/dashboard/HomePage"}
          onClick={handleTabClick}
        />
        <SidebarLink
          href="/dashboard/UploadPage"
          icon={FiUpload}
          label={userType === "Admin" ? "Upload" : "Search URL"}
          active={currentPath === "/dashboard/UploadPage"}
          onClick={handleTabClick}
        />
        {userType === "Admin" && (
          <SidebarLink
            href="/dashboard/UserManagementPage"
            icon={FiUsers}
            label="User Management"
            active={currentPath === "/dashboard/UserManagementPage"}
            onClick={handleTabClick}
          />
        )}
        <SidebarLink
          href="/dashboard/PredectionHistoryPage"
          icon={FiBookOpen}
          label="Prediction History"
          active={currentPath === "/dashboard/PredectionHistoryPage"}
          onClick={handleTabClick}
        />
        {userType === "Admin" && (
          <SidebarLink
            href="/dashboard/ThreatsDetectedPage"
            icon={FiShield}
            label="Threats Detected"
            active={currentPath === "/dashboard/ThreatsDetectedPage"}
            onClick={handleTabClick}
          />
        )}
        <SidebarLink
          href="/blogs"
          icon={FiActivity}
          label="Blogs"
          active={currentPath === "/blogs"}
          onClick={handleTabClick}
        />
        <SidebarLink
          href="/video-lecture"
          icon={FiPlayCircle}
          label="Video Lecture"
          active={currentPath === "/video-lecture"}
          onClick={handleTabClick}
        />
      </VStack>

      {/* Spacer to push the Logout link to the bottom */}
      <Spacer />

      {/* Logout Link */}
      <SidebarLink
        href="/logout"
        icon={FiLogOut}
        label="Logout"
        active={currentPath === "/logout"}
        onClick={() => {
          localStorage.clear();
          setAuthState({});
          router.push("/");
        }}
      />
    </Box>
  );
};

// Component to render individual links in the sidebar
const SidebarLink = ({ href, icon, label, active, onClick }) => (
  <Flex
    align="center"
    justify="center"
    padding={3}
    borderRadius="md"
    bg={active ? "teal.600" : "transparent"} // Change background color if active
    _hover={{ bg: "teal.700" }} // Change hover color
    width="full"
    cursor="pointer" // Change cursor to pointer for better UX
    onClick={() => onClick(href)} // Handle click to change route
  >
    {React.createElement(icon, { size: 20 })} {/* Render the passed icon */}
    <Text ml={3}>{label}</Text>
  </Flex>
);

export default Sidebar;
